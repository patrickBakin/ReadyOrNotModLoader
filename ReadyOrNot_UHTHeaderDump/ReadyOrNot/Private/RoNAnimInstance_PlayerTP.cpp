#include "RoNAnimInstance_PlayerTP.h"

class UAnimSequenceBase;

UAnimSequenceBase* URoNAnimInstance_PlayerTP::GetPlayerAnimation_TP(TEnumAsByte<EBaseAnimType_TP::Type> AnimName) const {
    return NULL;
}

URoNAnimInstance_PlayerTP::URoNAnimInstance_PlayerTP() {
    this->LastAnimWeaponData = NULL;
    this->EditorWeaponAnimData = NULL;
    this->bWeaponDown = false;
    this->bIsAiming = false;
    this->bIsShieldEquipped = false;
    this->AimingAlpha = 0.00f;
    this->bLeanLeft = false;
    this->bLeanRight = false;
    this->QuickLeanLeftAmount = 0.00f;
    this->QuickLeanRightAmount = 0.00f;
    this->QuickLeanLeftAlpha = 0.00f;
    this->QuickLeanRightAlpha = 0.00f;
    this->QuickLeanIntensity = 0.05f;
    this->FootIKValue = 0.00f;
    this->FootIKAlpha = 0.00f;
    this->bRagdoll = false;
    this->bIsPlayingDeathAnim = false;
    this->bArrested = false;
    this->bIsDead = false;
    this->bDeathAnimEnd = false;
    this->bStunned = false;
    this->bTased = false;
    this->bOnLadder = false;
    this->LadderUpDownMovement = 0.00f;
    this->LeanAngleY = 0.00f;
    this->LeanAngleZ = 0.00f;
    this->bCoverLeft = false;
    this->bCoverRight = false;
    this->bCoverMiddle = false;
    this->bCoverLeftLow = false;
    this->bCoverRightLow = false;
    this->bCoverPeek = false;
    this->AimOffsetAlpha = 0.00f;
    this->bJumpStartTrigger = false;
    this->SmoothMappedLeanToAnimStandLeft = 0.00f;
    this->SmoothMappedLeanToAnimStandRight = 0.00f;
    this->SmoothMappedLeanToAnimCrouchLeft = 0.00f;
    this->SmoothMappedLeanToAnimCrouchRight = 0.00f;
    this->Speed_tp_rifle_stand_sprint_f = 0.00f;
    this->Crouch_Idle_Pose_Low_TP = NULL;
    this->Crouch_Idle_Pose_Up_TP = NULL;
    this->Crouch_Idle_Pose_Shld_TP = NULL;
    this->Crouch_Idle_Pose_Sights_TP = NULL;
    this->Crouch_Idle_Pose_Ret_TP = NULL;
    this->Crouch_Idle_Pose_Ovr_TP = NULL;
    this->Idle_Pose_Low_TP = NULL;
    this->Idle_Pose_Up_TP = NULL;
    this->Idle_Pose_Shld_TP = NULL;
    this->Idle_Pose_Sights_TP = NULL;
    this->Idle_Pose_Ret_TP = NULL;
    this->Idle_Pose_Ovr_TP = NULL;
    this->Idle_Pose_VFG_TP = NULL;
    this->Idle_Pose_AFG_TP = NULL;
    this->Idle_Pose_HSTOP_TP = NULL;
    this->bLeaningLeftNotCrouching = false;
    this->bNotLeaningLeftOrCrouching = false;
    this->bNotLeaningLeftOrNotCrouching = false;
    this->bLeaningRightNotCrouching = false;
    this->bNotLeaningRightOrCrouching = false;
    this->bNotLeaningRightOrNotCrouching = false;
    this->bCrouchingAndMoving = false;
    this->bNotCrouchingAndMoving = false;
    this->bAimingAndNotDeployable = false;
    this->WalkSpeedForward = 0.00f;
    this->WalkSpeedLeft = 0.00f;
    this->WalkSpeedRight = 0.00f;
    this->WalkSpeedBackward = 0.00f;
    this->CrouchWalkSpeedForward = 0.00f;
    this->CrouchWalkSpeedLeft = 0.00f;
    this->CrouchWalkSpeedRight = 0.00f;
    this->CrouchWalkSpeedBackward = 0.00f;
    this->RunSpeedForward = 0.00f;
    this->RunSpeedLeft = 0.00f;
    this->RunSpeedRight = 0.00f;
    this->RunSpeedBackward = 0.00f;
    this->bLessThanPointOneSecondOnRelevantAnim = false;
    this->bIsInCombatOrAlerted = false;
    this->bMoving = false;
    this->bIsAlerted = false;
    this->AlertAlpha = 0.00f;
    this->bIsInCombat = false;
    this->bIsSurrendering = false;
    this->bSprayed = false;
    this->bStung = false;
    this->CurPseudoSpeed = EPseudoSpeedType::Null;
    this->bFemale = false;
    this->bChild = false;
    this->bHasInjury = false;
    this->AnimSpeedFwdPlayrateSync = 0.00f;
    this->AnimSpeedSidePlayrateSync = 0.00f;
    this->AnimSpeedPlayrateSync = 0.00f;
    this->RetentionAlpha = 0.00f;
    this->LoweredAlpha = 0.00f;
    this->SightAlpha = 0.00f;
    this->LoweredCooldownTime = 0.80f;
    this->IsLoweredUp = false;
    this->ArmsOnlySlotAlpha = 0.00f;
    this->LeftArmOnlySlotAlpha = 0.00f;
    this->VelocityInterpTime = 7.00f;
    this->SpeedScaling = 0.00f;
    this->PlayrateClampMax = 0.15f;
    this->PostPivotTriggerThreshold = 1.00f;
    this->CharacterRef = NULL;
    this->CharacterAiRef = NULL;
    this->bUseDistanceMatching = false;
    this->DistanceMatchingCurrentState = EDistanceMatchingType::None;
    this->CurrentPivotDirectionExt = EMoveDirectionExt::F;
    this->bPivotDirectionBroken = false;
    this->bCanPivotInCurDirection = false;
    this->bSMPrePivotRuleset = false;
    this->bStartDirectionBroken = false;
    this->ReplicatedMaxSpeed = 0.00f;
    this->bSMStartRuleset = false;
    this->bSMStopRuleset = false;
}

